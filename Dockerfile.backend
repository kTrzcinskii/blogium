# Build stage
FROM rust:1.82-slim-bullseye as builder

# Install required dependencies
RUN apt-get update && \
    apt-get install -y pkg-config libssl-dev sqlite3 libsqlite3-dev && \
    rm -rf /var/lib/apt/lists/*

# Install sqlx-cli
RUN cargo install sqlx-cli --no-default-features --features sqlite

# Create a new empty shell project
WORKDIR /usr/src/app

COPY . .

# Build with SQLx offline mode to avoid database connection during build
ENV SQLX_OFFLINE=true

# Build for release
RUN cargo build --release

# Runtime stage
FROM debian:bullseye-slim

# Install runtime dependencies
RUN apt-get update && \
    apt-get install -y sqlite3 libsqlite3-0 ca-certificates && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy the built binary from builder
COPY --from=builder /usr/src/app/target/release/blogium /app/blogium
COPY --from=builder /usr/src/app/migrations /app/migrations
COPY --from=builder /usr/local/cargo/bin/sqlx /usr/local/bin/sqlx

# Create data directory for SQLite
RUN mkdir -p /app/data

# Create initial empty database
RUN sqlite3 /app/data/database.sqlite ".databases"

ENV DATABASE_URL=sqlite:///app/data/database.sqlite

RUN sqlx migrate run

# Expose the port your application runs on
EXPOSE 3000

CMD ["/app/blogium"]